---

- name: Install Crosshair
  hosts: localhost
  tasks:

  # TODO: Add a comment here.
  - name: Add Debian Stretch Backports
    copy:
      content: deb http://deb.debian.org/debian stretch-backports main contrib
      dest: /etc/apt/sources.list.d/stretch-backports.list
    become: yes

  # Ensure that Debian packages are up-to-date.
  - name: Update Debian packages list
    apt:
      upgrade: safe
      update_cache: yes
    become: yes

    # Uninstall vim-tiny as it will be replaced by vim-nox.
  - name: Uninstall vim-tiny
    apt:
      name: vim-tiny
      state: absent
    become: true

  # Install Debian packages which provide core functionality.
  - name: Install core Debian packages
    apt:
      name: "{{ item }}"
    with_items:
      - abook    # Address book.
      - alsa-utils    # Sound tools.
      - avahi-daemon    # Local network DNS discovery.  # (TODO: Check description is correct)
      - atool    # Required to preview archives in ranger.
      - c2hs    # Required for Cabal to install xmobar.
      - cabal-install    # Required to install Haskell packages.
      - chromium    # Web browser (alternative to Firefox).
      - dunst    # Notification daemon.
      - feh    # Image viewer. TODO: Configure it.
      - fontconfig    # Font tools.
      - firefox-esr    # Web browser.
      - fwupd    # Firmware updater.
      - git    # Version control system.
      - gitk    # Git repository viewer.
      - highlight    # Required for syntax highlighting in ranger.
      - keepassx    # Password manager. TODO: Is there any other PW manager for Debian?
      - libasound2-dev    # Requied for Cabal to install xmobar.
      - libiw-dev    # Required for Cabal to install xmobar.
      - libnotify-bin    # TODO: Describe this package. Consider whether there
        # is a lighter package that provides the same functionality
        # (eg. notification-deamon?)
      - libx11-dev    # Required for Cabal to install xmonad.
      - libxft-dev    # Required for Cabal to install xmonad-contrib.
      - libxinerama-dev    # Required for Cabal to install xmonad.
      - libxrandr-dev    # Required for Cabal to install xmonad.
      - libxss-dev    # Required for Cabal to install xmonad.
      - maim    # Screenshot tool.
      - mutt    # Mail user agent. TODO: Or "Email client"?
      - network-manager    # Network manager.
      - network-manager-gnome    # NetworkManager GUI.
      - network-manager-openvpn-gnome    # NetworkManager OpenVPN plugin.
      - poppler-utils    # Required to preview PDFs in ranger.
      - pulseaudio    # Required for Firefox to play audio.
      - ranger    # File manager.
      - redshift    # Screen colour temperature controller.
      - rofi    # Menu builder.
      - rsync    # Required for Crosshair installation with Ansible.
      - rxvt-unicode    # Terminal.
      - slop    # Required for screenshot area selection with maim.
      - udiskie    # Removable media automounter.
      - ufw    # Firewall.
      - vim-nox    # Text editor.
      - weechat    # IRC client. TODO: Add config files and remove thie comment.
      - xorg    # X environment.
    become: yes

  # TODO: Configure WeeChat.

  # TODO: Add a comment here.
  - name: Install Debian Backports packages
    apt:
      name: "{{ item }}"
      default_release: stretch-backports
    with_items:
      - torbrowser-launcher
    become: yes

  # Install Haskell packages for Xmonad using Cabal. Xmonad 0.14 and
  # xmonad-contrib 0.14 are the latest versions of those packages. Xmobar 0.26
  # is not the latest version of that package, but it is the latest version
  # which can be installed with GHC 8.0.1, the version of GHC provided by
  # Debian Stretch.
  - name: Install Haskell packages
    shell: >
        cabal update &&
        cabal install xmonad-0.14 &&
        cabal install xmonad-contrib-0.14 &&
        cabal install xmobar-0.26 -f with_iwlib -f with_xft

  # Enable the firewall.
  - name: Enable UFW
    shell: ufw enable
    become: yes

  # Create /usr/share sub-directories.
  - name: Create /usr/share sub-directories
    file:
      dest: /usr/share/{{ item }}
      state: directory
    with_items:
      - icons/default
    become: yes

    # Symlink the git completion script into /etc/bash_completion.d/
  - name: Symlink git completion script
    file:
      src: /usr/share/bash-completion/completions/git
      path: /etc/bash_completion.d/git
      state: link
    become: yes

  # Create dotdirectories in the home directory.
  - name: Create dotdirectories
    file:
      dest: "{{ item }}"
      state: directory
    with_items:
      - ~/.fonts
      - ~/.mutt/colors
      - ~/.urxvt/ext
      - ~/.vim/autoload

  # Create data dotdirectory sub-directories in the home directory.
  - name: Create data dotdirectory sub-directories
    file:
      dest: ~/.data/{{ item }}
      state: directory
    with_items:
      - contacts
      - mail
      - passwords

  # Copy dotfiles to home directory.
  - name: Copy dotfiles
    synchronize:
      src: ../files/dotfiles/
      dest: "~"

  # Copy user-dirs.default file to /etc/xdg/ directory.
  - name: Copy user-dirs.defaults
    copy:
      src: ../files/systemfiles/user-dirs.defaults
      dest: /etc/xdg/user-dirs.defaults
    become: yes

  # Create or recreate XDG user directories.
  - name: Create/recreate user directories
    shell: xdg-user-dirs-update --force

  # Copy cursor files to /usr/share/icons directory.
  - name: Copy cursor files
    synchronize:
      src: ../files/icons/Crosshair/
      dest: /usr/share/icons/Crosshair
    become: yes

  # Create the Crosshair cursor alternative in update-alternatives. Set its
  # priority to 100 to override Adwaita's priority of 90.
  - name: Create Crosshair cursor alternative
    shell: >
      update-alternatives
      --install
      /usr/share/icons/default/cursor.theme
      x-cursor-theme
      /usr/share/icons/Crosshair/cursor.theme
      100
    become: yes

  # Download the Source Code Pro font.
  - name: Get Source Code Pro font
    get_url:
      url: https://github.com/adobe-fonts/source-code-pro/raw/2.030R-ro/1.050R-it/OTF/{{ item }}
      dest: /usr/local/share/fonts/{{ item }}
    with_items:
      - SourceCodePro-Regular.otf
      - SourceCodePro-Black.otf
    become: yes

  # Download the FontAwesome font.
  - name: Get FontAwesome font
    get_url:
      url: https://github.com/FortAwesome/Font-Awesome/raw/v4.7.0/fonts/FontAwesome.otf
      dest: /usr/local/share/fonts/FontAwesome.otf
    become: yes

  # Install fonts.
  - name: Install fonts
    # TODO: Are mkfontscale and mkfontdir are necessary here?
    shell: fc-cache -f /usr/local/share/fonts

  # Configure the .fonts directory so that the user can add their own fonts.
  - name: Set up user fonts directory
    # TODO: Add to the manual some instructions on how to install fonts
    # TODO: Check that mkfontscale and mkfontdir are necessary.
    # TODO: Check that the fc-cache command does anything useful here.
    # TODO: Check that the -fv switch is necessary - it probably isn't.
    shell: >
      mkfontscale ~/.fonts &&
      mkfontdir ~/.fonts &&
      fc-cache -fv ~/.fonts

  # Get the urxvt font resizer script.
  # TODO: Check that ownership is correct and permissions are 644.
  # TODO: Prefer to specify a version other than master here.
  - name: Get urxvt resize-font script
    get_url:
      url: https://raw.githubusercontent.com/simmel/urxvt-resize-font/master/resize-font
      dest: ~/.urxvt/ext/resize-font

  # TODO: Add a comment here.
  # TODO: Prefer to specify a version other than master here.
  - name: Get vim-plug
    get_url:
      url: https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
      dest: ~/.vim/autoload/

  # Install Vim plugins by invoking PlugInstall.
  - name: Install Vim plugins
    shell: vim +PlugInstall +qall

  # Unmute the sound and set it to a reasonable initial volume. By default the
  # sound is muted.
  - name: Set initial volume level
    shell: amixer sset Master 50% unmute

  # TODO: Add a comment here.
  # TODO: Note that Firefox will require a manual step to enable these
  # extensions.
  # - name: Get Firefox extension files
  #   get_url:
  #     url: https://addons.mozilla.org/firefox/downloads/file/{{ item.source }}
  #     dest: ~/.mozilla/firefox/{{ lookup('ini', 'Path section=Profile0 file=~/.mozilla/firefox/profiles.ini') }}/extensions/{{ item.filename }}
  #   with_items:
  #     - { source: "1075959/dark_reader-4.6.8-an+fx.xpi", filename: "addon@darkreader.org.xpi" }
  #     - { source: "1082984/https_everywhere-2018.9.19-an+fx.xpi", filename: "https-everywhere@eff.org.xpi" }
  #     - { source: "1084668/privacy_badger-2018.9.20-an+fx.xpi", filename: "jid1-MnnxcxisBPnSXQ@jetpack" }
  #     - { source: "1086463/ublock_origin-1.17.0-an+fx.xpi", filename: "uBlock0@raymondhill.net.xpi" }
  #     - { source: "1060733/vimium_ff-1.64-an+fx.xpi", filename: "{d7742d87-e61d-4b78-b8a1-b469842139fa}.xpi" }
  #     - TODO: Add one to specify the content of a new tab so that it doesn't come out white and bright.

  # TODO: Add a comment here.
  # TODO: Note that Chromium will require a manual step to enable these
  # extensions.
  # TODO: - name: Add Chromium extensions

  - name: Add mutt colorscheme
    get_url:
      url: https://raw.githubusercontent.com/altercation/mutt-colors-solarized/master/mutt-colors-solarized-dark-16.muttrc
      dest: ~/.mutt/colors/
